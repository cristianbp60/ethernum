/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx --types --keepnames --keepgroups --keepmeshes --transform --simplify --precision 6 public/models/hyperstructure-1.glb
Files: public/models/realm-city_20.glb [1.92MB] > realm-city_20-transformed.glb [710.58KB] (63%)
*/
// @ts-nocheck
import * as THREE from "three";
import React, { useEffect, useMemo, useRef, useState } from "react";
import { Html, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { button, buttonGroup, useControls } from "leva";
import useUIStore from "../../hooks/store/useUIStore";
import { useLocation } from "wouter";
import useRealmStore from "../../hooks/store/useRealmStore";
import { getRealm } from "../../utils/realms";
import { FarmsRegionTooltip } from "./regions/FarmsRegionTooltip";
import { extend } from "@react-three/fiber";
import { FisheryRegionTooltip } from "./regions/FisheryRegionTooltip";
extend({ FarmsRegionTooltip });
type GLTFResult = GLTF & {
  nodes: {
    archer_tower: THREE.Mesh;
    barracks: THREE.Mesh;
    mage_tower: THREE.Mesh;
    castle: THREE.Mesh;
    ["army-tent-big001"]: THREE.Mesh;
    ["army-tent-big001_1"]: THREE.Mesh;
    ["army-tent-big001"]: THREE.Mesh;
    ["army-tent-big001_1"]: THREE.Mesh;
    ["army-tent-big001"]: THREE.Mesh;
    ["army-tent-big001_1"]: THREE.Mesh;
    ["army-tent-big001"]: THREE.Mesh;
    ["army-tent-big001_1"]: THREE.Mesh;
    crops: THREE.Mesh;
    ocean: THREE.Mesh;
    rivers: THREE.Mesh;
    ocean_small: THREE.Mesh;
    forest: THREE.Mesh;
    ["deciduous-tree001"]: THREE.Mesh;
    ["deciduous-tree001_1"]: THREE.Mesh;
    ["deciduous-tree001"]: THREE.Mesh;
    ["deciduous-tree001_1"]: THREE.Mesh;
    ["forest-labor"]: THREE.Mesh;
    ["forest-labor_mine-1"]: THREE.Mesh;
    ["forest-labor_mine-2"]: THREE.Mesh;
    ["forest-labor_mine-3"]: THREE.Mesh;
    ["forest-labor_mine-4"]: THREE.Mesh;
    ["forest-labor_mine-5"]: THREE.Mesh;
    ["forest-labor_mine-6"]: THREE.Mesh;
    ["forest-labor_mine-7"]: THREE.Mesh;
    terrain_1: THREE.Mesh;
    terrain_2: THREE.Mesh;
    terrain_3: THREE.Mesh;
    terrain_4: THREE.Mesh;
    terrain_5: THREE.Mesh;
    terrain_6: THREE.Mesh;
    terrain_7: THREE.Mesh;
    floor_market_1: THREE.Mesh;
    floor_market_2: THREE.Mesh;
    floor_market_3: THREE.Mesh;
    floor_ranch_1: THREE.Mesh;
    floor_ranch_2: THREE.Mesh;
    floor_ranch_3: THREE.Mesh;
    floor_labor_1: THREE.Mesh;
    floor_labor_2: THREE.Mesh;
    floor_labor_3: THREE.Mesh;
    terrain001: THREE.Mesh;
    terrain001_1: THREE.Mesh;
    terrain001_2: THREE.Mesh;
    terrain002: THREE.Mesh;
    terrain002_1: THREE.Mesh;
    terrain002_2: THREE.Mesh;
    tower: THREE.Mesh;
    tower_1: THREE.Mesh;
    ["wall-straight"]: THREE.Mesh;
    ["wall-straight_1"]: THREE.Mesh;
    ["wall-straight_2"]: THREE.Mesh;
    bridge: THREE.Mesh;
    bridge_1: THREE.Mesh;
    ["army-tent-big"]: THREE.Mesh;
    ["army-tent-big_1"]: THREE.Mesh;
    ["tent-small"]: THREE.Mesh;
    banner: THREE.Mesh;
    banner_1: THREE.Mesh;
    ["timber-wall"]: THREE.Mesh;
    ["timber-wall_1"]: THREE.Mesh;
    ["timber-wall_2"]: THREE.Mesh;
    granary: THREE.Mesh;
    granary_1: THREE.Mesh;
    granary_2: THREE.Mesh;
    granary_3: THREE.Mesh;
    ["covered-boxes"]: THREE.Mesh;
    ["covered-boxes_1"]: THREE.Mesh;
    ["box-pile"]: THREE.Mesh;
    ["army-tent-big002"]: THREE.Mesh;
    ["market-stall"]: THREE.Mesh;
    ["market-stall_1"]: THREE.Mesh;
    caravan: THREE.Mesh;
    caravan_1: THREE.Mesh;
    ["store-square"]: THREE.Mesh;
    ["store-square_1"]: THREE.Mesh;
    ["store-square_2"]: THREE.Mesh;
    ["roofed-market"]: THREE.Mesh;
    ["roofed-market_1"]: THREE.Mesh;
    ["triangular-market"]: THREE.Mesh;
    ["triangular-market_1"]: THREE.Mesh;
    ["triangular-market_2"]: THREE.Mesh;
    stable: THREE.Mesh;
    ["mount-rest"]: THREE.Mesh;
    fence: THREE.Mesh;
    ["hay-stack"]: THREE.Mesh;
    ["hay-stack_1"]: THREE.Mesh;
    crop: THREE.Mesh;
    ["house-1"]: THREE.Mesh;
    ["house-1_1"]: THREE.Mesh;
    ["house-1_2"]: THREE.Mesh;
    ["house-2"]: THREE.Mesh;
    ["house-2_1"]: THREE.Mesh;
    ["house-2_2"]: THREE.Mesh;
    ["house-3"]: THREE.Mesh;
    ["house-3_1"]: THREE.Mesh;
    ["house-3_2"]: THREE.Mesh;
    ["house-4"]: THREE.Mesh;
    ["house-4_1"]: THREE.Mesh;
    ["house-5"]: THREE.Mesh;
    ["house-5_1"]: THREE.Mesh;
    pier: THREE.Mesh;
    pier_1: THREE.Mesh;
    ["pier-small"]: THREE.Mesh;
    boat: THREE.Mesh;
    boat_1: THREE.Mesh;
    mine: THREE.Mesh;
    mine_1: THREE.InstancedMesh;
    mine_2: THREE.InstancedMesh;
    deposit: THREE.InstancedMesh;
    ["mining-hut"]: THREE.Mesh;
    ["mining-hut_1"]: THREE.Mesh;
    ["mine-smoke"]: THREE.InstancedMesh;
    ["water-fall"]: THREE.Mesh;
    ["deciduous-tree"]: THREE.Mesh;
    ["deciduous-tree_1"]: THREE.Mesh;
    ["evergreen-tree"]: THREE.Mesh;
    ["evergreen-tree_1"]: THREE.Mesh;
    rock: THREE.Mesh;
    rock_1: THREE.Mesh;
  };
  materials: {
    PaletteMaterial004: THREE.MeshStandardMaterial;
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial006: THREE.MeshStandardMaterial;
    PaletteMaterial014: THREE.MeshStandardMaterial;
    PaletteMaterial015: THREE.MeshPhysicalMaterial;
    PaletteMaterial016: THREE.MeshStandardMaterial;
    PaletteMaterial018: THREE.MeshStandardMaterial;
    PaletteMaterial017: THREE.MeshStandardMaterial;
    PaletteMaterial005: THREE.MeshStandardMaterial;
    PaletteMaterial019: THREE.MeshStandardMaterial;
    PaletteMaterial003: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    PaletteMaterial007: THREE.MeshStandardMaterial;
    PaletteMaterial008: THREE.MeshStandardMaterial;
    PaletteMaterial009: THREE.MeshStandardMaterial;
    PaletteMaterial010: THREE.MeshStandardMaterial;
    PaletteMaterial011: THREE.MeshStandardMaterial;
    PaletteMaterial012: THREE.MeshStandardMaterial;
    PaletteMaterial013: THREE.MeshStandardMaterial;
    Smoke: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>>;

const defaultDepositScales = [
  1.2352931311176092, 1, 1.0479205817124106, 0.7063635143266438, 0.6027512832797368, 0.706363541587667, 1,
  0.7904654145240784, 1.0163131012457123, 0.8672361321459853, 1, 0.7904654145240784, 0.8248795568337531,
  0.7038828930948088, 0.8248796100941466,
];
const defaultSmokeScales = [
  0.9764708630725908, 0.9764709990491794, 0.9999999812060965, 0.7836309585302489, 1.0000001124736881,
  0.9999999818348843, 0.8081183891787105, 1.295847996648098, 1.2757331132083767, 1.0509585564759265, 0.6686555302578977,
  0.8889416593001317, 0.709281156175978, 0.7092811685289583, 1.0509584273694603, 1.0509585007747364, 0.8889417074807053,
  0.8889417066664951,
];

const minesDepositsIndexes = [[0], [1, 2], [3, 4, 5], [6, 7], [8, 9], [10, 11], [12, 13, 14]];
const minesSmokeIndexes = [
  [0, 1],
  [2, 3],
  [4, 5],
  [6, 7, 8],
  [9, 10, 11],
  [12, 13, 14],
  [15, 16, 17],
];

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/realm-city_20-transformed.glb") as GLTFResult;

  const [hoveredArea, setHoveredArea] = useState<string | null>(null);

  const { realmEntityId, realmId } = useRealmStore();

  const setIsLoadingScreenEnabled = useUIStore((state) => state.setIsLoadingScreenEnabled);

  const [location, setLocation] = useLocation();

  let scale = new THREE.Vector3();
  const tempObject = new THREE.Object3D();
  let matrix = new THREE.Matrix4();

  const mine_2 = new THREE.InstancedMesh(nodes.mine_2.geometry, materials.PaletteMaterial006, 7);
  mine_2.instanceMatrix = nodes.mine_2.instanceMatrix;
  const deposit = new THREE.InstancedMesh(nodes.deposit.geometry, materials.PaletteMaterial004, 15);
  deposit.instanceMatrix = nodes.deposit.instanceMatrix;
  const smoke = new THREE.InstancedMesh(nodes["mine-smoke"].geometry, materials.Smoke, 18);
  smoke.instanceMatrix = nodes["mine-smoke"].instanceMatrix;

  const updateInstanceScale = (instance: THREE.InstancedMesh, id: number, _scale: number) => {
    scale.set(_scale, _scale, _scale);
    //woodInstances.getMatrixAt(id, matrix);
    instance.getMatrixAt(id, matrix);
    matrix.decompose(tempObject.position, tempObject.quaternion, tempObject.scale);
    tempObject.scale.copy(scale);
    tempObject.updateMatrix();
    instance.setMatrixAt(id, tempObject.matrix);
  };

  const [enabledMines, setEnabledMines] = useState<any>({
    0: false,
    1: false,
    2: false,
    3: false,
    4: false,
    5: false,
    6: false,
  });

  const setMineStatus = (id: number, status: boolean) => {
    setEnabledMines((prev: any) => ({ ...prev, [id]: status }));
  };

  useEffect(() => {
    if (!realmId) return;
    const realm = getRealm(realmId);
    const statuses = {
      0: false,
      1: false,
      2: false,
      3: false,
      4: false,
      5: false,
      6: false,
    };
    for (let id = 0; id < realm.resource_types_count; id++) {
      // @ts-ignore
      statuses[id] = true;
    }
    setEnabledMines(statuses);
    setTimeout(() => {
      setIsLoadingScreenEnabled(false);
    }, 500);
  }, [realmId]);

  useEffect(() => {
    for (let id = 0; id < 7; id++) {
      updateInstanceScale(mine_2, id, enabledMines[id] ? 1 : 0.01);
      minesDepositsIndexes[id].forEach((depositId) => {
        updateInstanceScale(deposit, depositId, enabledMines[id] ? defaultDepositScales[depositId] : 0.01);
      });
      minesSmokeIndexes[id].forEach((smokeId) => {
        updateInstanceScale(smoke, smokeId, enabledMines[id] ? defaultSmokeScales[smokeId] : 0.01);
      });
    }
    deposit.instanceMatrix.needsUpdate = true;
    mine_2.instanceMatrix.needsUpdate = true;
    smoke.instanceMatrix.needsUpdate = true;
  }, [enabledMines]);

  useControls(() => ({
    enableMine: button(async () => {
      const id = parseInt((await window.prompt("Enter mine number [1-7]")) || "") - 1;
      setMineStatus(id, true);
    }),
    disableMine: button(async () => {
      const id = parseInt((await window.prompt("Enter mine number [1-7]")) || "") - 1;
      setMineStatus(id, false);
    }),
    disableDeposit: button(async () => {
      const id = parseInt((await window.prompt("Enter mine number [1-15]")) || "") - 1;
      updateInstanceScale(deposit, id, 0.01);
    }),
    getDepositScales: button(() => {
      const depositsScales = [];
      for (let i = 0; i < 15; i++) {
        deposit.getMatrixAt(i, matrix);
        matrix.decompose(tempObject.position, tempObject.quaternion, tempObject.scale);
        depositsScales.push({ ...tempObject.scale });
      }
      console.log("scales", depositsScales);
    }),
  }));

  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="archer_tower"
          geometry={nodes.archer_tower.geometry}
          material={materials.PaletteMaterial004}
          position={[-62.469486, 39.621521, -24.215282]}
          rotation={[0.011296, 0.828387, -0.004794]}
          scale={[35.000004, 35, 35]}
        />
        <mesh name="barracks" geometry={nodes.barracks.geometry} material={materials.PaletteMaterial004} />
        <mesh
          name="mage_tower"
          geometry={nodes.mage_tower.geometry}
          material={materials.PaletteMaterial004}
          position={[-8.498649, 27.847218, -229.488235]}
          scale={31.884161}
        />
        <mesh
          name="castle"
          geometry={nodes.castle.geometry}
          material={materials.PaletteMaterial004}
          position={[-25.330475, 32.69627, -113.067566]}
        />
        <group name="market-tent">
          <mesh
            name="army-tent-big001"
            geometry={nodes["army-tent-big001"].geometry}
            material={materials.PaletteMaterial001}
          />
          <mesh
            name="army-tent-big001_1"
            geometry={nodes["army-tent-big001_1"].geometry}
            material={materials.PaletteMaterial006}
          />
        </group>
        <group name="market-tent001" position={[132.23587, 7.119616, 80.059448]} rotation={[0, -1.343678, 0]}>
          <mesh
            name="army-tent-big001"
            geometry={nodes["army-tent-big001"].geometry}
            material={materials.PaletteMaterial001}
          />
          <mesh
            name="army-tent-big001_1"
            geometry={nodes["army-tent-big001_1"].geometry}
            material={materials.PaletteMaterial006}
          />
        </group>
        <group
          name="market-tent003"
          position={[143.323242, 8.33679, 39.967541]}
          rotation={[Math.PI, -0.878875, Math.PI]}
        >
          <mesh
            name="army-tent-big001"
            geometry={nodes["army-tent-big001"].geometry}
            material={materials.PaletteMaterial001}
          />
          <mesh
            name="army-tent-big001_1"
            geometry={nodes["army-tent-big001_1"].geometry}
            material={materials.PaletteMaterial006}
          />
        </group>
        <group
          name="market-tent004"
          position={[98.929054, 8.336788, 57.700043]}
          rotation={[Math.PI, -0.193094, Math.PI]}
        >
          <mesh
            name="army-tent-big001"
            geometry={nodes["army-tent-big001"].geometry}
            material={materials.PaletteMaterial001}
          />
          <mesh
            name="army-tent-big001_1"
            geometry={nodes["army-tent-big001_1"].geometry}
            material={materials.PaletteMaterial006}
          />
        </group>
        <mesh
          onPointerEnter={() => setHoveredArea("farm")}
          name="crops"
          geometry={nodes.crops.geometry}
          material={materials.PaletteMaterial014}
          position={[-209.282944, 0, -42.59145]}
        />
        <mesh
          name="ocean"
          geometry={nodes.ocean.geometry}
          material={materials.PaletteMaterial015}
          scale={[100, 1, 100]}
        />
        <mesh
          name="rivers"
          geometry={nodes.rivers.geometry}
          material={materials.PaletteMaterial016}
          position={[2.455429, 1.826893, -3.053192]}
          scale={35}
        />
        <mesh
          name="ocean_small"
          geometry={nodes.ocean_small.geometry}
          material={materials.PaletteMaterial015}
          scale={[1, 0.01, 1]}
        />
        <mesh name="forest" geometry={nodes.forest.geometry} material={materials.PaletteMaterial018} />
        <group
          name="deciduous-tree189"
          position={[494.866547, 4.604025, 284.570831]}
          rotation={[0, -0.79251, 0]}
          scale={[0.602762, 0.776755, 0.602762]}
        >
          <mesh
            name="deciduous-tree001"
            geometry={nodes["deciduous-tree001"].geometry}
            material={materials.PaletteMaterial018}
          />
          <mesh
            name="deciduous-tree001_1"
            geometry={nodes["deciduous-tree001_1"].geometry}
            material={materials.PaletteMaterial006}
          />
        </group>
        <group
          name="deciduous-tree190"
          position={[497.886841, 4.604025, 285.281494]}
          rotation={[Math.PI, -1.275876, Math.PI]}
          scale={[0.602762, 0.776755, 0.602762]}
        >
          <mesh
            name="deciduous-tree001"
            geometry={nodes["deciduous-tree001"].geometry}
            material={materials.PaletteMaterial018}
          />
          <mesh
            name="deciduous-tree001_1"
            geometry={nodes["deciduous-tree001_1"].geometry}
            material={materials.PaletteMaterial006}
          />
        </group>
        <mesh name="forest-labor" geometry={nodes["forest-labor"].geometry} material={materials.PaletteMaterial018} />
        {!enabledMines[0] && (
          <mesh
            name="forest-labor_mine-1"
            geometry={nodes["forest-labor_mine-1"].geometry}
            material={materials.PaletteMaterial018}
            position={[255.524887, 24.816765, -274.141235]}
          />
        )}
        {!enabledMines[1] && (
          <mesh
            name="forest-labor_mine-2"
            geometry={nodes["forest-labor_mine-2"].geometry}
            material={materials.PaletteMaterial018}
            position={[347.965668, 31.691498, -262.068115]}
            rotation={[0, 0.701062, 0]}
          />
        )}
        {!enabledMines[2] && (
          <mesh
            name="forest-labor_mine-3"
            geometry={nodes["forest-labor_mine-3"].geometry}
            material={materials.PaletteMaterial018}
            position={[443.692535, 37.123852, -254.909409]}
            rotation={[0, 0.701062, 0]}
          />
        )}
        {!enabledMines[3] && (
          <mesh
            name="forest-labor_mine-4"
            geometry={nodes["forest-labor_mine-4"].geometry}
            material={materials.PaletteMaterial018}
            position={[217.164063, 15.933407, -180.459167]}
            rotation={[0, 1.199812, 0]}
          />
        )}
        {!enabledMines[4] && (
          <mesh
            name="forest-labor_mine-5"
            geometry={nodes["forest-labor_mine-5"].geometry}
            material={materials.PaletteMaterial018}
            position={[348.106384, 24.380737, -185.882813]}
            rotation={[0, 1.199812, 0]}
          />
        )}
        {!enabledMines[5] && (
          <mesh
            name="forest-labor_mine-6"
            geometry={nodes["forest-labor_mine-6"].geometry}
            material={materials.PaletteMaterial018}
            position={[368.398834, 14.289568, -116.425484]}
            rotation={[0, 1.199812, 0]}
          />
        )}
        {!enabledMines[6] && (
          <mesh
            name="forest-labor_mine-7"
            geometry={nodes["forest-labor_mine-7"].geometry}
            material={materials.PaletteMaterial018}
            position={[444.873962, 14.289568, -69.293701]}
            rotation={[0, 0.062514, 0]}
          />
        )}
        <group name="terrain" position={[0, -0.002192, 0]}>
          <mesh name="terrain_1" geometry={nodes.terrain_1.geometry} material={materials.PaletteMaterial017} />
          <mesh name="terrain_2" geometry={nodes.terrain_2.geometry} material={materials.PaletteMaterial005} />
          <mesh name="terrain_3" geometry={nodes.terrain_3.geometry} material={materials.PaletteMaterial019} />
          <mesh name="terrain_4" geometry={nodes.terrain_4.geometry} material={materials.PaletteMaterial001} />
          <mesh name="terrain_5" geometry={nodes.terrain_5.geometry} material={materials.PaletteMaterial003} />
          <mesh name="terrain_6" geometry={nodes.terrain_6.geometry} material={materials.PaletteMaterial004} />
          <mesh name="terrain_7" geometry={nodes.terrain_7.geometry} material={materials.PaletteMaterial018} />
        </group>
        <group
          onPointerEnter={() => setHoveredArea("market")}
          onPointerLeave={() => setHoveredArea(null)}
          name="floor_market"
          position={[0, -0.002192, 0]}
          onClick={() => setLocation(`/realm/${realmEntityId}/open-offers`)}
        >
          {hoveredArea === "market" && (
            <Html position={[125, 75, 75]} distanceFactor={400}>
              <div className="p-2 text-white -translate-x-1/2 bg-black rounded-lg whitespace-nowrap">Market</div>
            </Html>
          )}
          <mesh
            name="floor_market_1"
            geometry={nodes.floor_market_1.geometry}
            material={materials.PaletteMaterial017}
          />
          <mesh
            name="floor_market_2"
            geometry={nodes.floor_market_2.geometry}
            material={materials.PaletteMaterial001}
          />
          <mesh
            name="floor_market_3"
            geometry={nodes.floor_market_3.geometry}
            material={materials.PaletteMaterial003}
          />
          <mesh geometry={nodes.floor_market_3.geometry}>
            <meshStandardMaterial
              transparent={true}
              color="#806a53"
              toneMapped={false}
              opacity={hoveredArea === "market" ? 0.5 : 0}
              emissive="orange"
              emissiveIntensity={25}
            />
          </mesh>
        </group>
        <group
          onPointerEnter={() => setHoveredArea("ranch")}
          onPointerLeave={() => setHoveredArea(null)}
          name="floor_ranch"
          position={[0, -0.002192, 0]}
          onClick={() => setLocation(`/realm/${realmEntityId}/caravans`)}
        >
          {hoveredArea === "ranch" && (
            <Html position={[450, 75, 100]} distanceFactor={400}>
              <div className="p-2 text-white -translate-x-1/2 bg-black rounded-lg whitespace-nowrap">Ranch</div>
            </Html>
          )}
          <mesh name="floor_ranch_1" geometry={nodes.floor_ranch_1.geometry} material={materials.PaletteMaterial005} />
          <mesh name="floor_ranch_2" geometry={nodes.floor_ranch_2.geometry} material={materials.PaletteMaterial019} />
          <mesh name="floor_ranch_3" geometry={nodes.floor_ranch_3.geometry} material={materials.PaletteMaterial001} />
          <mesh geometry={nodes.floor_ranch_3.geometry}>
            <meshStandardMaterial
              transparent={true}
              color="#806a53"
              toneMapped={false}
              opacity={hoveredArea === "ranch" ? 0.5 : 0}
              emissive="orange"
              emissiveIntensity={25}
            />
          </mesh>
        </group>
        <group
          onPointerEnter={() => setHoveredArea("labor")}
          onPointerLeave={() => setHoveredArea(null)}
          onClick={() => setLocation(`/realm/${realmEntityId}/labor`)}
          name="floor_labor"
          position={[0, -0.002192, 0]}
        >
          {hoveredArea === "labor" && (
            <Html position={[350, 75, -200]} distanceFactor={400}>
              <div className="p-2 text-white -translate-x-1/2 bg-black rounded-lg whitespace-nowrap">Labor</div>
            </Html>
          )}
          <mesh name="floor_labor_1" geometry={nodes.floor_labor_1.geometry} material={materials.PaletteMaterial005} />
          <mesh name="floor_labor_2" geometry={nodes.floor_labor_2.geometry} material={materials.PaletteMaterial019} />
          <mesh name="floor_labor_3" geometry={nodes.floor_labor_3.geometry} material={materials.PaletteMaterial001} />
          <mesh geometry={nodes.floor_labor_2.geometry}>
            <meshStandardMaterial
              transparent={true}
              color="#806a53"
              toneMapped={false}
              opacity={hoveredArea === "labor" ? 0.5 : 0}
              emissive="orange"
              emissiveIntensity={25}
            />
          </mesh>
        </group>
        <group
          onPointerEnter={() => setHoveredArea("farm")}
          onPointerLeave={() => setHoveredArea(null)}
          onClick={() => {
            setLocation(`/realm/${realmEntityId}/farm`);
          }}
          name="floor_farm"
          position={[0, -0.002192, 0]}
        >
          {hoveredArea === "farm" && <FarmsRegionTooltip />}
          <mesh name="terrain001" geometry={nodes.terrain001.geometry} material={materials.PaletteMaterial005} />
          <mesh name="terrain001_1" geometry={nodes.terrain001_1.geometry} material={materials.PaletteMaterial019} />
          <mesh name="terrain001_2" geometry={nodes.terrain001_2.geometry} material={materials.PaletteMaterial001} />
          <mesh geometry={nodes.terrain001.geometry}>
            <meshStandardMaterial
              transparent={true}
              color="#806a53"
              toneMapped={false}
              opacity={hoveredArea === "farm" ? 0.5 : 0}
              emissive="orange"
              emissiveIntensity={25}
            />
          </mesh>
        </group>
        <group
          onPointerEnter={() => setHoveredArea("fishery")}
          onPointerLeave={() => setHoveredArea(null)}
          onClick={() => {
            setLocation(`/realm/${realmEntityId}/fish`);
          }}
          name="floor_fishery"
          position={[0, -0.002192, 0]}
        >
          {hoveredArea === "fishery" && <FisheryRegionTooltip />}
          <mesh name="terrain002" geometry={nodes.terrain002.geometry} material={materials.PaletteMaterial005} />
          <mesh name="terrain002_1" geometry={nodes.terrain002_1.geometry} material={materials.PaletteMaterial019} />
          <mesh name="terrain002_2" geometry={nodes.terrain002_2.geometry} material={materials.PaletteMaterial001} />
          <mesh geometry={nodes.terrain002.geometry}>
            <meshStandardMaterial
              transparent={true}
              color="#806a53"
              toneMapped={false}
              opacity={hoveredArea === "fishery" ? 0.5 : 0}
              emissive="orange"
              emissiveIntensity={25}
            />
          </mesh>
        </group>
        <group>
          <instancedMesh
            args={[nodes.tower.geometry, materials.PaletteMaterial001, 27]}
            name="tower"
            instanceMatrix={nodes.tower.instanceMatrix}
          />
          <instancedMesh
            args={[nodes.tower_1.geometry, materials.PaletteMaterial002, 27]}
            name="tower_1"
            instanceMatrix={nodes.tower_1.instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["wall-straight"].geometry, materials.PaletteMaterial001, 134]}
            name="wall-straight"
            instanceMatrix={nodes["wall-straight"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["wall-straight_1"].geometry, materials.PaletteMaterial002, 134]}
            name="wall-straight_1"
            instanceMatrix={nodes["wall-straight_1"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["wall-straight_2"].geometry, materials.PaletteMaterial003, 134]}
            name="wall-straight_2"
            instanceMatrix={nodes["wall-straight_2"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes.bridge.geometry, materials.PaletteMaterial004, 6]}
            name="bridge"
            instanceMatrix={nodes.bridge.instanceMatrix}
          />
          <instancedMesh
            args={[nodes.bridge_1.geometry, materials.PaletteMaterial005, 6]}
            name="bridge_1"
            instanceMatrix={nodes.bridge_1.instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["army-tent-big"].geometry, materials.PaletteMaterial001, 13]}
            name="army-tent-big"
            instanceMatrix={nodes["army-tent-big"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["army-tent-big_1"].geometry, materials.PaletteMaterial006, 13]}
            name="army-tent-big_1"
            instanceMatrix={nodes["army-tent-big_1"].instanceMatrix}
          />
        </group>
        <instancedMesh
          args={[nodes["tent-small"].geometry, materials.PaletteMaterial001, 27]}
          name="tent-small"
          instanceMatrix={nodes["tent-small"].instanceMatrix}
        />
        <group>
          <instancedMesh
            args={[nodes.banner.geometry, materials.PaletteMaterial006, 12]}
            name="banner"
            instanceMatrix={nodes.banner.instanceMatrix}
          />
          <instancedMesh
            args={[nodes.banner_1.geometry, materials.PaletteMaterial001, 12]}
            name="banner_1"
            instanceMatrix={nodes.banner_1.instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["timber-wall"].geometry, materials.PaletteMaterial006, 50]}
            name="timber-wall"
            instanceMatrix={nodes["timber-wall"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["timber-wall_1"].geometry, materials.PaletteMaterial007, 50]}
            name="timber-wall_1"
            instanceMatrix={nodes["timber-wall_1"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["timber-wall_2"].geometry, materials.PaletteMaterial002, 50]}
            name="timber-wall_2"
            instanceMatrix={nodes["timber-wall_2"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes.granary.geometry, materials.PaletteMaterial002, 11]}
            name="granary"
            instanceMatrix={nodes.granary.instanceMatrix}
          />
          <instancedMesh
            args={[nodes.granary_1.geometry, materials.PaletteMaterial008, 11]}
            name="granary_1"
            instanceMatrix={nodes.granary_1.instanceMatrix}
          />
          <instancedMesh
            args={[nodes.granary_2.geometry, materials.PaletteMaterial009, 11]}
            name="granary_2"
            instanceMatrix={nodes.granary_2.instanceMatrix}
          />
          <instancedMesh
            args={[nodes.granary_3.geometry, materials.PaletteMaterial006, 11]}
            name="granary_3"
            instanceMatrix={nodes.granary_3.instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["covered-boxes"].geometry, materials.PaletteMaterial001, 9]}
            name="covered-boxes"
            instanceMatrix={nodes["covered-boxes"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["covered-boxes_1"].geometry, materials.PaletteMaterial006, 9]}
            name="covered-boxes_1"
            instanceMatrix={nodes["covered-boxes_1"].instanceMatrix}
          />
        </group>
        <instancedMesh
          args={[nodes["box-pile"].geometry, materials.PaletteMaterial007, 12]}
          name="box-pile"
          instanceMatrix={nodes["box-pile"].instanceMatrix}
        />
        <instancedMesh
          args={[nodes["army-tent-big002"].geometry, materials.PaletteMaterial009, 13]}
          name="army-tent-big002"
          instanceMatrix={nodes["army-tent-big002"].instanceMatrix}
        />
        <group>
          <instancedMesh
            args={[nodes["market-stall"].geometry, materials.PaletteMaterial006, 99]}
            name="market-stall"
            instanceMatrix={nodes["market-stall"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["market-stall_1"].geometry, materials.PaletteMaterial001, 99]}
            name="market-stall_1"
            instanceMatrix={nodes["market-stall_1"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes.caravan.geometry, materials.PaletteMaterial010, 23]}
            name="caravan"
            instanceMatrix={nodes.caravan.instanceMatrix}
          />
          <instancedMesh
            args={[nodes.caravan_1.geometry, materials.PaletteMaterial006, 23]}
            name="caravan_1"
            instanceMatrix={nodes.caravan_1.instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["store-square"].geometry, materials.PaletteMaterial009, 18]}
            name="store-square"
            instanceMatrix={nodes["store-square"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["store-square_1"].geometry, materials.PaletteMaterial011, 18]}
            name="store-square_1"
            instanceMatrix={nodes["store-square_1"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["store-square_2"].geometry, materials.PaletteMaterial006, 18]}
            name="store-square_2"
            instanceMatrix={nodes["store-square_2"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["roofed-market"].geometry, materials.PaletteMaterial009, 23]}
            name="roofed-market"
            instanceMatrix={nodes["roofed-market"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["roofed-market_1"].geometry, materials.PaletteMaterial006, 23]}
            name="roofed-market_1"
            instanceMatrix={nodes["roofed-market_1"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["triangular-market"].geometry, materials.PaletteMaterial009, 12]}
            name="triangular-market"
            instanceMatrix={nodes["triangular-market"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["triangular-market_1"].geometry, materials.PaletteMaterial006, 12]}
            name="triangular-market_1"
            instanceMatrix={nodes["triangular-market_1"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["triangular-market_2"].geometry, materials.PaletteMaterial011, 12]}
            name="triangular-market_2"
            instanceMatrix={nodes["triangular-market_2"].instanceMatrix}
          />
        </group>
        <instancedMesh
          args={[nodes.stable.geometry, materials.PaletteMaterial006, 22]}
          name="stable"
          instanceMatrix={nodes.stable.instanceMatrix}
        />
        <instancedMesh
          args={[nodes["mount-rest"].geometry, materials.PaletteMaterial006, 36]}
          name="mount-rest"
          instanceMatrix={nodes["mount-rest"].instanceMatrix}
        />
        <instancedMesh
          args={[nodes.fence.geometry, materials.PaletteMaterial006, 700]}
          name="fence"
          instanceMatrix={nodes.fence.instanceMatrix}
        />
        <group>
          <instancedMesh
            args={[nodes["hay-stack"].geometry, materials.PaletteMaterial012, 37]}
            name="hay-stack"
            instanceMatrix={nodes["hay-stack"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["hay-stack_1"].geometry, materials.PaletteMaterial013, 37]}
            name="hay-stack_1"
            instanceMatrix={nodes["hay-stack_1"].instanceMatrix}
          />
        </group>
        <instancedMesh
          args={[nodes.crop.geometry, materials.PaletteMaterial014, 54]}
          name="crop"
          instanceMatrix={nodes.crop.instanceMatrix}
        />
        <group>
          <instancedMesh
            args={[nodes["house-1"].geometry, materials.PaletteMaterial009, 44]}
            name="house-1"
            instanceMatrix={nodes["house-1"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["house-1_1"].geometry, materials.PaletteMaterial011, 44]}
            name="house-1_1"
            instanceMatrix={nodes["house-1_1"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["house-1_2"].geometry, materials.PaletteMaterial006, 44]}
            name="house-1_2"
            instanceMatrix={nodes["house-1_2"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["house-2"].geometry, materials.PaletteMaterial009, 14]}
            name="house-2"
            instanceMatrix={nodes["house-2"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["house-2_1"].geometry, materials.PaletteMaterial011, 14]}
            name="house-2_1"
            instanceMatrix={nodes["house-2_1"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["house-2_2"].geometry, materials.PaletteMaterial006, 14]}
            name="house-2_2"
            instanceMatrix={nodes["house-2_2"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["house-3"].geometry, materials.PaletteMaterial009, 10]}
            name="house-3"
            instanceMatrix={nodes["house-3"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["house-3_1"].geometry, materials.PaletteMaterial011, 10]}
            name="house-3_1"
            instanceMatrix={nodes["house-3_1"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["house-3_2"].geometry, materials.PaletteMaterial006, 10]}
            name="house-3_2"
            instanceMatrix={nodes["house-3_2"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["house-4"].geometry, materials.PaletteMaterial009, 22]}
            name="house-4"
            instanceMatrix={nodes["house-4"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["house-4_1"].geometry, materials.PaletteMaterial011, 22]}
            name="house-4_1"
            instanceMatrix={nodes["house-4_1"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["house-5"].geometry, materials.PaletteMaterial009, 44]}
            name="house-5"
            instanceMatrix={nodes["house-5"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["house-5_1"].geometry, materials.PaletteMaterial006, 44]}
            name="house-5_1"
            instanceMatrix={nodes["house-5_1"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes.pier.geometry, materials.PaletteMaterial006, 17]}
            name="pier"
            instanceMatrix={nodes.pier.instanceMatrix}
          />
          <instancedMesh
            args={[nodes.pier_1.geometry, materials.PaletteMaterial002, 17]}
            name="pier_1"
            instanceMatrix={nodes.pier_1.instanceMatrix}
          />
        </group>
        <instancedMesh
          args={[nodes["pier-small"].geometry, materials.PaletteMaterial006, 22]}
          name="pier-small"
          instanceMatrix={nodes["pier-small"].instanceMatrix}
        />
        <group>
          <instancedMesh
            args={[nodes.boat.geometry, materials.PaletteMaterial006, 27]}
            name="boat"
            instanceMatrix={nodes.boat.instanceMatrix}
          />
          <instancedMesh
            args={[nodes.boat_1.geometry, materials.PaletteMaterial001, 27]}
            name="boat_1"
            instanceMatrix={nodes.boat_1.instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes.mine.geometry, materials.PaletteMaterial004, 7]}
            name="mine"
            instanceMatrix={nodes.mine.instanceMatrix}
          />
          <instancedMesh
            args={[nodes.mine_1.geometry, materials.PaletteMaterial005, 7]}
            name="mine_1"
            instanceMatrix={nodes.mine_1.instanceMatrix}
          />
          <primitive object={mine_2} />
        </group>
        <primitive object={deposit} />
        <group>
          <instancedMesh
            args={[nodes["mining-hut"].geometry, materials.PaletteMaterial009, 18]}
            name="mining-hut"
            instanceMatrix={nodes["mining-hut"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["mining-hut_1"].geometry, materials.PaletteMaterial006, 18]}
            name="mining-hut_1"
            instanceMatrix={nodes["mining-hut_1"].instanceMatrix}
          />
        </group>
        <primitive object={smoke} />
        <instancedMesh
          args={[nodes["water-fall"].geometry, materials.PaletteMaterial017, 35]}
          name="water-fall"
          instanceMatrix={nodes["water-fall"].instanceMatrix}
        />
        <group>
          <instancedMesh
            args={[nodes["deciduous-tree"].geometry, materials.PaletteMaterial018, 261]}
            name="deciduous-tree"
            instanceMatrix={nodes["deciduous-tree"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["deciduous-tree_1"].geometry, materials.PaletteMaterial006, 261]}
            name="deciduous-tree_1"
            instanceMatrix={nodes["deciduous-tree_1"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes["evergreen-tree"].geometry, materials.PaletteMaterial001, 81]}
            name="evergreen-tree"
            instanceMatrix={nodes["evergreen-tree"].instanceMatrix}
          />
          <instancedMesh
            args={[nodes["evergreen-tree_1"].geometry, materials.PaletteMaterial006, 81]}
            name="evergreen-tree_1"
            instanceMatrix={nodes["evergreen-tree_1"].instanceMatrix}
          />
        </group>
        <group>
          <instancedMesh
            args={[nodes.rock.geometry, materials.PaletteMaterial004, 181]}
            name="rock"
            instanceMatrix={nodes.rock.instanceMatrix}
          />
          <instancedMesh
            args={[nodes.rock_1.geometry, materials.PaletteMaterial019, 181]}
            name="rock_1"
            instanceMatrix={nodes.rock_1.instanceMatrix}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/realm-city_20-transformed.glb");
