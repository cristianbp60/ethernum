/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 --types --keepnames --keepgroups --keepmeshes --transform --precision 6 .\public\models\hyperstructure.glb 
Files: .\public\models\hyperstructure.glb [21.82KB] > hyperstructure-transformed.glb [10.8KB] (51%)
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cylinder007: THREE.Mesh;
    Cylinder007_1: THREE.Mesh;
    Cylinder007_2: THREE.Mesh;
  };
  materials: {
    Stone: THREE.MeshStandardMaterial;
    Gold: THREE.MeshStandardMaterial;
    Grass: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>>;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/hyperstructure-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <group name="tower001">
          <mesh name="Cylinder007" geometry={nodes.Cylinder007.geometry} material={materials.Stone} />
          <mesh name="Cylinder007_1" geometry={nodes.Cylinder007_1.geometry} material={materials.Gold} />
          <mesh name="Cylinder007_2" geometry={nodes.Cylinder007_2.geometry} material={materials.Grass} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/hyperstructure-transformed.glb");
