/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 --types --keepnames --keepgroups --keepmeshes --transform public/models/hyperstructure-started.glb 
Files: public/models/hyperstructure-started.glb [802.53KB] > hyperstructure-started-transformed.glb [344.78KB] (57%)
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    tower_initialized: THREE.Mesh;
    tower_initialized_scaffolds: THREE.Mesh;
  };
  materials: {
    Stone_Rough: THREE.MeshStandardMaterial;
    Wood: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>>;

export default function HyperstructureStarted(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/hyperstructure-started-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="tower_initialized"
          geometry={nodes.tower_initialized.geometry}
          material={materials.Stone_Rough}
          position={[0, -0.096, -0.634]}
        />
        <mesh
          name="tower_initialized_scaffolds"
          geometry={nodes.tower_initialized_scaffolds.geometry}
          material={materials.Wood}
          position={[0.118, -0.001, -1.24]}
          rotation={[-Math.PI, 0.719, -Math.PI]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/hyperstructure-started-transformed.glb");
